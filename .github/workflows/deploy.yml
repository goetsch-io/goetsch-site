name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # or master, depending on your default branch
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true  # Fetch Hugo themes (if used)
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.145.0'
          extended: true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # Build the site
      - name: Build
        run: npm run build

      # Add testing step (if you have tests configured)
      # - name: Run tests
      #   run: npm test

      # Security scan for dependencies
      - name: Run security scan
        run: npm audit --production

      # Check for broken links (optional)
      - name: Check for broken links
        run: |
          echo "Checking for broken links in the built site..."
          # You can use a tool like linkinator or htmlproofer here
          # For example: npx linkinator ./public --recurse --skip "^(?!http://localhost)"

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && success()
    steps:
      - name: Trigger Cloudflare Pages Deployment
        run: |
          RESPONSE=$(curl -X POST -d {} "${{ secrets.CLOUDFLARE_DEPLOY_HOOK }}" -w "\n%{http_code}" -s)
          HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
          CONTENT=$(echo "$RESPONSE" | sed '$d')
          
          echo "HTTP Status Code: $HTTP_CODE"
          echo "Response Content: $CONTENT"
          
          if [[ "$HTTP_CODE" -ge 200 && "$HTTP_CODE" -lt 300 ]]; then
            echo "Deployment successfully triggered via Cloudflare Deploy Hook"
            echo "Please check the Cloudflare Pages dashboard for deployment status"
            echo "Expected URL: https://goetsch-site.pages.dev/"
          else
            echo "Failed to trigger deployment. Please check Cloudflare Pages configuration."
            exit 1
          fi
